
https://code.tutsplus.com/how-to-build-a-simple-rest-api-in-php--cms-37000t





REST API készítése PHP és MySQL használatával

Cél
	Egy egyszerű REST API-t készítünk, amely lehetővé teszi a felhasználók listájának lekérését egy MySQL adatbázisból.
	Projekt Felépítése

1. index.php
	•Az alkalmazás belépési pontja (front-controller).
	• Felismeri az URI szegmenseit, és a megfelelő controllert hívja meg.

2. inc/config.php
	• Tartalmazza az adatbázis kapcsolódáshoz szükséges konfigurációs adatokat.

3. inc/bootstrap.php
	• Az alkalmazás inicializálása: konfigurációk, modellek és controllerek betöltése.

4. Model/Database.php
	• Az adatbázis elérést biztosító osztály (kapcsolódás és lekérdezések).

5. Model/UserModel.php
	• A users tábla műveleteit kezelő modell.
	• Metódus: getUsers($limit) – Felhasználók lekérdezése limitált mennyiségben.

6. Controller/Api/BaseController.php
	• Alap kontroller segédmetódusokkal.
	• Példák:
	• getUriSegments(): URI szegmensek feldolgozása.
	• sendOutput(): API válaszok küldése.

7. Controller/Api/UserController.php
	• Az API logikát kezelő kontroller.
	• Metódus: listAction() – Felhasználók listájának lekérése GET módszerrel.

8. Adatbázis
	• rest_api_demo adatbázis létrehozása.
	• users tábla:
	• Oszlopok: id, name, email, created_at.
	• Példa adatok feltöltése.

Fontos Kódrészletek

Adatbázis kapcsolat (Model/Database.php)
	• Az osztály kapcsolódik a MySQL adatbázishoz.
	• Lekérdezések futtatására használható:
public function select($query, $params = [])
public function executeStatement($query, $params = [])

Felhasználó Modell (Model/UserModel.php)
Példa metódus:

public function getUsers($limit) {
   return $this->select("SELECT * FROM users LIMIT ?", ["i", $limit]);
}

User API Végpont (Controller/Api/UserController.php)
Felhasználók lekérdezése:
public function listAction() {
   $userModel = new UserModel();
   $users = $userModel->getUsers(10); // 10 rekord lekérdezése
   $this->sendOutput(
       json_encode($users),
       ["Content-Type: application/json", "HTTP/1.1 200 OK"]
   );
}

URI Feldolgozás és Routing (index.php)
	• Az URI szegmensek alapján a megfelelő kontroller metódust hívja:
if ($uri[2] === 'user') {
   $controller = new UserController();
   $controller->{$uri[3] . 'Action'}();
}
Adatbázis Parancsok
1. Adatbázis létrehozása:
CREATE DATABASE rest_api_demo;

2. users tábla létrehozása:
CREATE TABLE users (
   id INT AUTO_INCREMENT PRIMARY KEY,
   name VARCHAR(100) NOT NULL,
   email VARCHAR(100) NOT NULL,
   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

3. Minta adatok beszúrása:
INSERT INTO users (name, email) VALUES
("John Doe", "john@example.com"),
("Jane Doe", "jane@example.com");
REST API Tesztelése
	• Példa végpont:
http://localhost/rest_api_demo/index.php/user/list
	• Válasz: JSON objektum
[
   {
       "id": 1,
       "name": "John Doe",
       "email": "john@example.com",
       "created_at": "2024-01-01 10:00:00"
   },
   ...
]